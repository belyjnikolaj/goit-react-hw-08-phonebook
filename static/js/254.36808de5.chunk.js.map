{"version":3,"file":"static/js/254.36808de5.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/contact/Contact.module.css?ecf7","components/MUIBackgroundLetterAvatars/BackgroundLetterAvatars.jsx","components/MUIModalChange/ModalChange.jsx","components/contact/Contact.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(el =>\n            el.name.toLowerCase().includes(filter.toLowerCase())\n        );\n    }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"input__title\":\"ContactForm_input__title__log9r\",\"number\":\"ContactForm_number__w9S8D\",\"input\":\"ContactForm_input__e2U+9\",\"button__add\":\"ContactForm_button__add__-Ogv9\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, TextField, createTheme } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, changeContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { ThemeProvider } from '@emotion/react';\nimport css from './ContactForm.module.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#5D4037',\n    },\n  },\n});\n\nconst isContactNumberExists = (number, currentContactId, contacts) => {\n  return contacts.some(\n    contact => contact.number === number && contact.id !== currentContactId\n  );\n};\n\nconst ContactForm = ({ contact, onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [formData, setFormData] = useState({ name: '', number: '' });\n\n  useEffect(() => {\n    if (contact) {\n      setFormData({\n        name: contact.name || '',\n        number: contact.number || '',\n      });\n    }\n  }, [contact]);\n\n  const handleNameChange = event => {\n    const formattedName =\n      event.target.value.charAt(0).toUpperCase() + event.target.value.slice(1);\n    setFormData(prevData => ({ ...prevData, name: formattedName }));\n  };\n\n  const handleNumberChange = event => {\n    const numberOnly = event.target.value.replace(/[^\\d]/g, ''); // Видаляємо всі нецифрові символи\n    setFormData(prevData => ({ ...prevData, number: numberOnly }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const { name, number } = formData;\n\n    const existingContactByName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const existingContactByNumber = isContactNumberExists(\n      number,\n      contact?.id,\n      contacts\n    );\n\n    if (existingContactByName && (!contact || contact.name !== name)) {\n      alert(`${name} is already in contacts!`);\n    } else if (existingContactByNumber && (!contact || contact.number !== number)) {\n      alert(`${number} is already associated with another contact!`);\n    } else {\n      if (contact?.id) {\n        if (contact.name !== name || contact.number !== number) {\n          try {\n            await dispatch(changeContact({ contactId: contact.id, name, number }));\n            onClose();\n          } catch (error) {\n            console.error('Error updating contact:', error);\n          }\n        } else {\n          onClose();\n        }\n      } else {\n        dispatch(addContact({ name, number }));\n        setFormData({ name: '', number: '' });\n      }\n    }\n\n    form.reset();\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} onKeyDown={handleKeyDown} className={css.form}>\n      <ThemeProvider theme={theme}>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleNameChange}\n          label=\"Name\"\n          fullWidth\n          color=\"primary\"\n          id=\"outlined-textarea\"\n          placeholder=\"Enter name\"\n          multiline\n          value={formData.name}\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .-\\s]?\\(?\\d{1,3}?\\)?[ .-\\s]?\\d{1,4}[ .-\\s]?\\d{1,4}[ .-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleNumberChange}\n          label=\"Number\"\n          fullWidth\n          color=\"primary\"\n          id=\"outlined-textarea\"\n          placeholder=\"Enter number\"\n          multiline\n          value={formData.number}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" disableElevation color=\"primary\">\n          {contact?.id ? 'Update contact' : 'Add contact'}\n        </Button>\n      </ThemeProvider>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }),\n  onClose: PropTypes.func,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__item\":\"Contact_contact__item__FcuyQ\",\"accordion\":\"Contact_accordion__mBw3x\",\"btn__close\":\"Contact_btn__close__h4d+Z\"};","import PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  const nameParts = name.split(' ');\n  const firstNameInitial = nameParts[0][0];\n  const lastNameInitial = nameParts[1] ? nameParts[1][0] : '';\n\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${firstNameInitial}${lastNameInitial}`,\n  };\n}\n\nfunction BackgroundLetterAvatars({contact}) {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Avatar {...stringAvatar(contact.name)} />      \n    </Stack>\n  );\n}\n\nBackgroundLetterAvatars.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\nexport default BackgroundLetterAvatars;","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Fab } from '@mui/material';\nimport ContactForm from 'components/contactForm/ContactForm';\nimport { useState } from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nfunction BasicModal({ contact }) {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return (\n        <div>\n            <Fab\n                color=\"secondary\"\n                aria-label=\"edit\"\n                onClick={handleOpen}\n                style={{\n                    width: '40px',\n                    height: '40px',\n                }}\n            >\n                <EditIcon />\n            </Fab>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"                \n            >\n                <Box sx={style} >\n                    <ContactForm contact={contact} onClose={handleClose}/>\n                </Box>\n            </Modal>\n        </div>\n    );\n}\nBasicModal.propTypes = {\n    contact: PropTypes.object.isRequired, \n};\n\nexport default BasicModal;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { deleteContact } from 'redux/operations';\nimport BackgroundLetterAvatars from 'components/MUIBackgroundLetterAvatars';\nimport { Fab, Stack } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CallIcon from '@mui/icons-material/Call';\nimport { useState } from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport BasicModal from 'components/MUIModalChange/ModalChange';\n\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();  \n  const [expanded, setExpanded] = useState(false);\n\n  const handleCall = () => {\n    window.location.href = `tel:${contact.number}`;\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n\n\n    <li className={css['contact__item']} key={contact.id}>\n      <Accordion className={css.accordion}\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n        style={{          \n          width: '100%',\n        }}\n\n      >\n        <AccordionSummary\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          style={{\n            width: '100%', display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'row', }}\n        >\n          <BackgroundLetterAvatars contact={contact} />\n          <Typography sx={{ width: '100%', flexShrink: 0, alignItems: 'center', display: 'flex', padding: '0 10px'  }}>\n            {contact.name} {contact.number}\n          </Typography>\n          \n        </AccordionSummary>\n        <AccordionDetails style={{ alignItems: 'center', display: 'flex', padding: '0 10px' }}>          \n          <Stack direction=\"row\" spacing={2}>\n            <Fab\n              onClick={handleCall}\n              color=\"primary\"\n              aria-label=\"call\"\n              style={{\n                width: '40px',\n                height: '40px',\n              }}\n            >\n              <CallIcon />\n            </Fab>\n            <Fab\n              style={{\n                backgroundColor: '#fff',\n                color: '#5D4037',\n                width: '40px',\n                height: '40px',\n              }}\n              aria-label=\"delete\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              <DeleteIcon />\n            </Fab>\n            <BasicModal contact={contact} />\n          </Stack>\n        </AccordionDetails>\n      </Accordion>\n    </li>\n  )\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,  \n};\n\nexport default Contact;","import Contact from 'components/contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nconst ContactList = () => {    \n  const filteredContacts = useSelector(selectFilteredContacts);\n  \n    return (\n      <>\n        {filteredContacts.length === 0 ? (\n          <p>No contacts available</p>\n        ) : (\n          <ul style={{ padding: '0 3vw'}}>\n            {filteredContacts.map((contact) => (\n                  <Contact contact = { contact } key={contact.id} />                \n              ))}\n          </ul>\n        )}\n      </>\n    );\n}\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/filterSliсe';\nimport { selectFilter } from 'redux/selectors';\nimport { ThemeProvider } from '@emotion/react';\nimport { Box, InputAdornment, TextField, Typography, createTheme } from '@mui/material';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#5D4037',\n        },\n    }\n});\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n  \n const filter = useSelector(selectFilter);\n    const handleChangeFilter = (e) => {\n    dispatch(addFilter(e.target.value ));\n  };\n    return (\n        <Box sx={{ maxWidth: 500, padding: '1vw 3vw' }}>\n            <Typography variant=\"h6\" gutterBottom>\n                Find contacts by name\n            </Typography>\n            <ThemeProvider theme={theme}>\n                <TextField\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <PersonSearchIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    type=\"text\"\n                    label=\"Seach\"\n                    fullWidth\n                    color='primary'\n                    id=\"outlined-textarea\"\n                    placeholder=\"Seach...\"                    \n                    value={filter}\n                    onChange={handleChangeFilter}\n                />\n            </ThemeProvider>\n            </Box>\n    )\n}\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/selectors';\nimport ContactForm from 'components/contactForm';\nimport ContactList from 'components/contactList';\nimport { fetchContacts } from 'redux/operations';\nimport Loader from 'components/loader/Loader';\nimport Filter from 'components/filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />      \n      <Filter />\n      <div>{isLoading && <Loader/>}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContacts","createSelector","el","name","toLowerCase","includes","theme","createTheme","palette","primary","main","isContactNumberExists","number","currentContactId","some","contact","id","onClose","dispatch","useDispatch","useSelector","useState","formData","setFormData","useEffect","handleSubmit","event","preventDefault","form","target","existingContactByName","existingContactByNumber","alert","changeContact","contactId","console","error","addContact","reset","onSubmit","onKeyDown","key","className","css","TextField","type","pattern","title","onChange","formattedName","value","charAt","toUpperCase","slice","prevData","label","fullWidth","color","placeholder","multiline","numberOnly","replace","Button","variant","disableElevation","stringToColor","string","i","hash","length","charCodeAt","toString","stringAvatar","nameParts","split","firstNameInitial","lastNameInitial","sx","bgcolor","children","Stack","direction","spacing","Avatar","style","position","top","left","transform","width","border","boxShadow","p","open","setOpen","handleClose","Fab","onClick","height","Edit","Modal","Box","panel","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","display","alignItems","flexDirection","Typography","flexShrink","padding","AccordionDetails","window","location","href","Call","backgroundColor","deleteContact","Delete","filteredContacts","map","maxWidth","gutterBottom","InputProps","endAdornment","InputAdornment","PersonSearch","e","addFilter","Contacts","fetchContacts","Helmet","Loader"],"sourceRoot":""}